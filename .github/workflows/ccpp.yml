name: C/C++ CI CPU

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  tests-cpu:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cxx: [ 'g++-7', 'g++-8', 'g++-9', 'clang++-8', 'clang++-9' ]
    name: tests-cpu-${{ matrix.cxx }}

    steps:
    - uses: actions/checkout@v2
    - name: cmake
      run: cmake -S . -B build-tests-${{ matrix.cxx }} -DGTENSOR_DEVICE=none -DCMAKE_BUILD_TYPE=RelWithDebInfo
      env:
        CXX: ${{ matrix.cxx }}
    - name: build
      run: cmake --build build-tests-${{ matrix.cxx }} -v
    - name: test
      run: cmake --build build-tests-${{ matrix.cxx }} -t test

  examples-cpu:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cxx: [ 'g++-7', 'g++-8', 'g++-9', 'clang++-8', 'clang++-9' ]
    name: examples-cpu-${{ matrix.cxx }}

    steps:
    - uses: actions/checkout@v2
    - name: cmake
      run: cmake -S examples -B build-examples-${{ matrix.cxx }} -DGTENSOR_DEVICE=none -DCMAKE_BUILD_TYPE=RelWithDebInfo
      env:
        CXX: ${{ matrix.cxx }}
    - name: build
      run: cmake --build build-examples-${{ matrix.cxx }} -v
    - name: daxpy
      run: ./build-examples-${{ matrix.cxx }}/daxpy
    - name: stencil1d
      run: ./build-examples-${{ matrix.cxx }}/stencil1d
    - name: mult_table
      run: ./build-examples-${{ matrix.cxx }}/mult_table

  build-cuda:
    runs-on: ubuntu-latest
    container: nvidia/cuda:10.0-devel

    steps:
    - uses: actions/checkout@v2
    - name: install packages
      run: apt-get update && apt-get install -y wget git
    - name: install cmake
      run: |
        wget -O cmake.sh 'https://github.com/Kitware/CMake/releases/download/v3.17.2/cmake-3.17.2-Linux-x86_64.sh'
        bash cmake.sh --prefix=/usr --skip-license --exclude-subdir
    - name: cmake tests
      run: cmake -S . -B build-tests-cuda -DGTENSOR_DEVICE=cuda -DCMAKE_BUILD_TYPE=RelWithDebInfo
    - name: build tests
      run: cmake --build build-tests-cuda -v
    - name: cmake examples
      run: cmake -S examples -B build-examples-cuda -DGTENSOR_DEVICE=cuda -DCMAKE_BUILD_TYPE=RelWithDebInfo
    - name: build examples
      run: cmake --build build-examples-cuda -v

  build-hip:
    runs-on: ubuntu-latest
    container: rocm/dev-ubuntu-18.04
    env:
      CMAKE_PREFIX_PATH: /opt/rocm/lib/cmake
      CXX: /opt/rocm/bin/hipcc
      CXXFLAGS: -amdgpu-target=gfx803

    steps:
    - uses: actions/checkout@v2
    - name: install packages
      run: apt-get update && apt-get install -y wget git rocm-dev hip-base rocthrust
    - name: install cmake
      run: |
        wget -O cmake.sh 'https://github.com/Kitware/CMake/releases/download/v3.17.2/cmake-3.17.2-Linux-x86_64.sh'
        bash cmake.sh --prefix=/usr --skip-license --exclude-subdir
    - name: cmake tests
      run: cmake -S . -B build-tests-hip -DGTENSOR_DEVICE=hip -DCMAKE_BUILD_TYPE=RelWithDebInfo
    - name: build tests
      run: cmake --build build-tests-hip -v
    - name: cmake examples
      run: cmake -S examples -B build-examples-hip -DGTENSOR_DEVICE=hip -DCMAKE_BUILD_TYPE=RelWithDebInfo
    - name: build examples
      run: cmake --build build-examples-hip -v
