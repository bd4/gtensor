
set(MPIEXEC_COMMAND${MPIEXEC_EXECUTABLE})

macro(add_gtensor_test name)
  add_executable(${name})
  target_gtensor_sources(${name} PRIVATE ${name}.cxx)
  target_link_libraries(${name} gtensor GTest::Main)
  if (USE_GTEST_DISCOVER_TESTS)
    gtest_discover_tests(${name} EXEC_WRAPPER ${MPIEXEC_COMMAND})
  else()
    gtest_add_tests(TARGET ${name} EXEC_WRAPPER ${MPIEXEC_COMMAND})
  endif()

  if (GTENSOR_TEST_DEBUG)
    target_compile_definitions(${name} PRIVATE GTENSOR_TEST_DEBUG)
  endif()
endmacro()

if ("${GTENSOR_DEVICE}" STREQUAL "cuda")
  add_gtensor_test(test_thrust_ext)
endif()

add_gtensor_test(test_expression)
add_gtensor_test(test_helper)
add_gtensor_test(test_gtensor)
add_gtensor_test(test_gtensor_span)
add_gtensor_test(test_view)
add_gtensor_test(test_wip)
add_gtensor_test(test_adapt)
add_gtensor_test(test_gtensor_storage)
add_gtensor_test(test_complex)
add_gtensor_test(test_device_backend)
add_gtensor_test(test_launch)
add_gtensor_test(test_span)

if (GTENSOR_BUILD_CLIB)
  add_executable(test_clib)
  target_gtensor_sources(test_clib PRIVATE test_clib.cxx)
  if (USE_GTEST_DISCOVER_TESTS)
    gtest_discover_tests(test_clib EXEC_WRAPPER ${MPIEXEC_COMMAND})
  else()
    gtest_add_tests(TARGET test_clib EXEC_WRAPPER ${MPIEXEC_COMMAND})
  endif()
  target_link_libraries(test_clib cgtensor GTest::Main)
  if (GTENSOR_TEST_DEBUG)
    target_compile_definitions(test_clib PRIVATE GTENSOR_TEST_DEBUG)
  endif()
endif()
