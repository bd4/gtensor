cmake_minimum_required(VERSION 3.13)
project(gtensor LANGUAGES CXX)
set(VERSION 0.01)

option(USE_GTEST_DISCOVER_TESTS "use gtest_discover_tests()" ON)
option(GTENSOR_CUDA "support CUDA" ON)

if (GTENSOR_CUDA)
  enable_language(CUDA)
endif()

find_package(GTest)
if (GTEST_FOUND)
  include(CTest)
endif()

function(target_cxx_sources TARGET)
  set(options "")
  set(oneValueArgs "")
  set(multiValueArgs PRIVATE)
  cmake_parse_arguments(target_cxx_sources "${options}" "${oneValueArgs}" "${multiValueArgs}" ${ARGN} )
  target_sources(${TARGET} PRIVATE ${target_cxx_sources_PRIVATE})
  if (GTENSOR_CUDA)
    set_source_files_properties(${target_cxx_sources_PRIVATE} PROPERTIES LANGUAGE CUDA)
  endif()
endfunction()
  
add_library(gtensor INTERFACE)
target_include_directories(gtensor INTERFACE include)
target_compile_features(gtensor INTERFACE cxx_std_14)
target_compile_options(gtensor INTERFACE $<$<COMPILE_LANGUAGE:CUDA>:--expt-extended-lambda>)
target_compile_options(gtensor INTERFACE $<$<COMPILE_LANGUAGE:CUDA>:--expt-relaxed-constexpr>)
if (GTEST_FOUND AND BUILD_TESTING)
  add_subdirectory(tests)
endif()
